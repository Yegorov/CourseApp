---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/authors":
    get:
      summary: list authors
      tags:
      - Authors
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                default:
                  value:
                    authors:
                    - id: 1
                      name: Artem
                      email: artem@example.com
                      bio:
                    - id: 2
                      name: Alexey
                      email: alexey@example.com
                      bio:
    post:
      summary: create author
      tags:
      - Authors
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                default:
                  value:
                    id: 1
                    name: Anna
                    email: anna@example.com
                    bio: Teacher
                    created_at: '2024-11-26T19:23:25Z'
                    updated_at: '2024-11-26T19:23:25Z'
        '400':
          description: bad request
          content:
            application/json:
              examples:
                default:
                  value:
                    status: 400
                    error: Bad Request
        '422':
          description: unprocessable entity
          content:
            application/json:
              examples:
                default:
                  value:
                    email:
                    - can't be blank
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                bio:
                  type: string
              required:
              - name
              - email
            examples:
              author:
                summary: create author
                value:
                  name: Anna
                  email: anna@example.com
                  bio: Teacher
  "/api/v1/authors/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show author
      tags:
      - Authors
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                default:
                  value:
                    id: 1
                    name: Anna
                    email: anna@example.com
                    bio: Teacher
                    created_at: '2024-11-26T19:23:25Z'
                    updated_at: '2024-11-26T19:23:25Z'
        '404':
          description: not found
          content:
            application/json:
              examples:
                default:
                  value:
                    status: 404
                    error: Not Found
    patch:
      summary: update author
      tags:
      - Authors
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                default:
                  value:
                    id: 1
                    name: Anna
                    email: anna@example.com
                    bio: Teacher with 5 year experience
                    created_at: '2024-11-26T19:23:25Z'
                    updated_at: '2024-11-26T19:23:25Z'
        '404':
          description: not found
          content:
            application/json:
              examples:
                default:
                  value:
                    status: 404
                    error: Not Found
        '422':
          description: unprocessable entity
          content:
            application/json:
              examples:
                default:
                  value:
                    email:
                    - can't be blank
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                bio:
                  type: string
              required:
              - name
              - email
            examples:
              author:
                summary: update author
                value:
                  bio: Teacher with 5 year experience
    delete:
      summary: delete author
      tags:
      - Authors
      responses:
        '204':
          description: successful
        '404':
          description: not found
          content:
            application/json:
              examples:
                default:
                  value:
                    status: 404
                    error: Not Found
        '409':
          description: conflict
          content:
            application/json:
              examples:
                default:
                  value:
                    status: 409
                    error: Conflict
                    message: The last author cannot be deleted
  "/api/v1/courses/{course_id}/competences":
    get:
      summary: list competences
      tags:
      - Competences
      parameters:
      - name: course_id
        in: path
        description: course_id
        required: true
        schema:
          type: string
      - name: page
        in: query
        required: false
        schema:
          type: integer
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                default:
                  value:
                    competences:
                    - id: 1
                      title: competence1
                    - id: 2
                      title: competence2
                    - id: 3
                      title: competence3
    post:
      summary: create competence
      tags:
      - Competences
      parameters:
      - name: course_id
        in: path
        description: course_id
        required: true
        schema:
          type: string
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                default:
                  value:
                    id: 1
                    title: competence4
        '400':
          description: bad request
          content:
            application/json:
              examples:
                default:
                  value:
                    status: 400
                    error: Bad Request
        '404':
          description: not found
          content:
            application/json:
              examples:
                default:
                  value:
                    status: 404
                    error: Not Found
        '422':
          description: unprocessable entity
          content:
            application/json:
              examples:
                default:
                  value:
                    title:
                    - can't be blank
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
              required:
              - title
            examples:
              competence:
                summary: create competence
                value:
                  title: competence
  "/api/v1/courses/{course_id}/competences/{id}":
    parameters:
    - name: course_id
      in: path
      description: course_id
      required: true
      schema:
        type: string
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show competence
      tags:
      - Competences
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                default:
                  value:
                    id: 1
                    title: competence1
        '404':
          description: not found
          content:
            application/json:
              examples:
                default:
                  value:
                    status: 404
                    error: Not Found
    patch:
      summary: update competence
      tags:
      - Competences
      parameters: []
      responses:
        '200':
          description: successful
        '404':
          description: not found
          content:
            application/json:
              examples:
                default:
                  value:
                    status: 404
                    error: Not Found
        '422':
          description: unprocessable entity
          content:
            application/json:
              examples:
                default:
                  value:
                    title:
                    - can't be blank
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
              required:
              - title
            examples:
              competence:
                summary: update competence
                value:
                  title: competence
    delete:
      summary: delete competence
      tags:
      - Competences
      responses:
        '204':
          description: successful
        '404':
          description: not found
          content:
            application/json:
              examples:
                default:
                  value:
                    status: 404
                    error: Not Found
  "/api/v1/courses":
    get:
      summary: list courses
      tags:
      - Courses
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                default:
                  value:
                    courses:
                    - id: 1
                      title: Course 1
                      description: Description 1
                      level: easy
                      rating: '93.57'
                      enable: true
                      author:
                        id: 1
                        name: Artem
                      competences:
                      - id: 1
                        title: competence1
                      - id: 2
                        title: competence2
                      - id: 3
                        title: competence3
                    - id: 2
                      title: Course 2
                      description: Description 2
                      level: normal
                      rating: '70.92'
                      enable: true
                      author:
                        id: 2
                        name: Alexey
                      competences:
                      - id: 4
                        title: competence4
                      - id: 5
                        title: competence5
    post:
      summary: create course
      tags:
      - Courses
      parameters: []
      responses:
        '201':
          description: successful
          content:
            application/json:
              examples:
                default:
                  value:
                    id: 1
                    title: Course
                    description: Description
                    level: easy
                    rating: '85.75'
                    enable: true
                    author_id: 1
                    created_at: '2024-11-26T19:23:25Z'
                    updated_at: '2024-11-26T19:23:25Z'
        '400':
          description: bad request
          content:
            application/json:
              examples:
                default:
                  value:
                    status: 400
                    error: Bad Request
        '422':
          description: unprocessable entity
          content:
            application/json:
              examples:
                default:
                  value:
                    author:
                    - can't be blank
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                level:
                  type: string
                  enum:
                  - easy
                  - normal
                  - hard
                rating:
                  type: string
                  pattern: "^d{1,3}.d{1,2}$"
                enabled:
                  type: boolean
                author_id:
                  type: integer
              required:
              - title
              - author_id
            examples:
              course:
                summary: create course
                value:
                  title: Course
                  description: Description
                  level: easy
                  rating: '85.75'
                  enabled: true
                  author_id: 1
  "/api/v1/courses/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show course
      tags:
      - Courses
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                default:
                  value:
                    id: 1
                    title: Course
                    description: Description
                    level: easy
                    rating: '85.75'
                    enable: true
                    author_id: 1
                    created_at: '2024-11-26T19:23:25Z'
                    updated_at: '2024-11-26T19:23:25Z'
                    author:
                      id: 1
                      name: Artem
                    competences:
                    - id: 1
                      title: competence1
                    - id: 2
                      title: competence2
                    - id: 3
                      title: competence3
        '404':
          description: not found
          content:
            application/json:
              examples:
                default:
                  value:
                    status: 404
                    error: Not Found
    patch:
      summary: update course
      tags:
      - Courses
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              examples:
                default:
                  value:
                    id: 1
                    title: Course
                    description: Description
                    level: easy
                    rating: '85.75'
                    enable: true
                    author_id: 1
                    created_at: '2024-11-26T19:23:25Z'
                    updated_at: '2024-11-26T19:23:25Z'
        '404':
          description: not found
          content:
            application/json:
              examples:
                default:
                  value:
                    status: 404
                    error: Not Found
        '422':
          description: unprocessable entity
          content:
            application/json:
              examples:
                default:
                  value:
                    title:
                    - can't be blank
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                level:
                  type: string
                  enum:
                  - easy
                  - normal
                  - hard
                rating:
                  type: string
                  pattern: "^d{1,3}.d{1,2}$"
                enabled:
                  type: boolean
                author_id:
                  type: integer
              required:
              - title
              - author_id
            examples:
              course:
                summary: update course
                value:
                  title: Course
                  description: Description
                  level: easy
                  rating: '85.75'
                  enabled: true
                  author_id: 1
    delete:
      summary: delete course
      tags:
      - Courses
      responses:
        '204':
          description: successful
        '404':
          description: not found
          content:
            application/json:
              examples:
                default:
                  value:
                    status: 404
                    error: Not Found
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: localhost:3000
